============================================================
Test cases for function integer_validator in 7-base_geometry
============================================================

This module contains a class BaseGeometry.

Usage
======
import module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)

Other valid tests
=================
	>>> bg.integer_validator("width", 89)

Invalid tests/tests that will raise errors
==========================================
	>>> bg.integer_validator("width", 0)
	Traceback (most recent call last):
	ValueError: width must be greater than 0

	>>> bg.integer_validator("size", "small")
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> bg.integer_validator("size", -19)
	Traceback (most recent call last):
	ValueError: size must be greater than 0

	>>> bg.integer_validator("width")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> bg.integer_validator("size", None)
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> bg.integer_validator("size", {3,4})
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> bg.integer_validator("weight", True)
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> bg.integer_validator("weight", [5])
	Traceback (most recent call last):
	TypeError: weight must be an integer

	>>> bg.integer_validator("size", (5,))
	Traceback (most recent call last):
	TypeError: size must be an integer
