===============================
Test cases for 2-matrix_divided
===============================

This module takes a matrix and an integer as arguments and divides each element in the matrix by that integer.

Usage
======
import module:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Other valid tests
=================
	>>> matrix_divided([[2, 4], [6, 8]], 2)
	[[1.0, 2.0], [3.0, 4.0]]

	>>> matrix_divided([[-2, 4], [6, -8]], 2)
	[[-1.0, 2.0], [3.0, -4.0]]

	>>> matrix_divided([[5.85, 10.50], [15.90, 20.50]], 5)
	[[1.17, 2.1], [3.18, 4.1]]

	>>> matrix_divided([[2, 4], [6, 8]], 2.2)
	[[0.91, 1.82], [2.73, 3.64]]

	>>> matrix_divided([[-2, 6.7, 0], [78, -14.7, 54]], 5.2)
	[[-0.38, 1.29, 0.0], [15.0, -2.83, 10.38]]

invalid tests
=============
	>>> matrix_divided([[2, 4], [6, 8]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([["school", 4], [6, 8]], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[2, 4], [6, 8]], "alx")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([], 5)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided((2, 4), 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[2, 4], [6, 8, 10]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

        >>> matrix_divided(2)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
	>>> matrix_divided([[2, 4], [6, 8]])
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
